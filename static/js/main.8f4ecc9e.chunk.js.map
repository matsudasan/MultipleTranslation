{"version":3,"sources":["components/Search.tsx","components/List.tsx","api/Api.js","components/Load.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","textFiled","marginTop","width","breakpoints","down","button","Search","languages","Translation","setLang","classes","useState","select","setSelect","text","setText","FormControl","className","InputLabel","id","Select","labelId","value","onChange","e","target","map","ele","MenuItem","code","language","TextField","label","multiline","rows","variant","Button","color","onClick","alert","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","fontSize","body","TableCell","StyledTableRow","root","action","hover","TableRow","table","maxWidth","row","display","alignItems","justifyContent","img","cursor","List","result","Table","aria-label","TableHead","align","TableBody","component","scope","AcsessApi","lang","a","params","i","length","query","URLSearchParams","fetch","res","json","data","Loadding","position","top","left","marginLeft","Load","CircularProgress","size","ReactApp","App","show","setShow","setResult","load","setLoad","Filter","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f4ecc9e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Language } from '../App'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Container = styled.div`\r\n  text-align:center;\r\n  width:400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (max-width: 768px) {\r\n      width:100%;\r\n  }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 150,\r\n        },\r\n        textFiled: {\r\n            marginTop: theme.spacing(2),\r\n            width:400,\r\n            [theme.breakpoints.down('xs')]: {\r\n                width:250\r\n            }\r\n        },\r\n        button:{\r\n            marginTop: theme.spacing(2),\r\n            width:100\r\n        }\r\n    })\r\n);\r\n\r\ntype Props = {\r\n    languages: Language[],\r\n    Translation:(text:string)=>void,\r\n    setLang:(lang:string)=>void\r\n}\r\n\r\nconst Search: React.FC<Props> = ({ languages,Translation,setLang}) => {\r\n    const classes = useStyles();\r\n    const [select, setSelect] = useState<string>('')\r\n    const [text,setText]=useState<string>('')\r\n\r\n    const handleChange = (e: React.ChangeEvent<{ value: unknown }>): void => {\r\n        setSelect(e.target.value as string)\r\n        setLang(e.target.value as string)\r\n    }\r\n\r\n    const handleClick=()=>{\r\n        if(!select || !text){\r\n            alert('翻訳する言語か、文章が入力されていません')\r\n            return\r\n        }\r\n        Translation(text)\r\n    }\r\n    return (\r\n        <Container>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">翻訳する言語</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={select}\r\n                    onChange={handleChange}\r\n                >\r\n                    {languages.map(ele => {\r\n                        return <MenuItem value={ele.code} key={ele.language}>{ele.language}</MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n            <TextField\r\n        　　　　 className={classes.textFiled}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"翻訳する文章を入力\"\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                value={text}\r\n                onChange={(e)=>setText(e.target.value)}\r\n            />\r\n            <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            className={classes.button}\r\n            onClick={handleClick}\r\n            >翻訳する</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useState } from 'react';\r\nimport { Language } from '../App'\r\nimport styled from 'styled-components';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport volume from '../img/volume.svg'\r\n\r\n\r\ntype Props = {\r\n    languages: Language[],\r\n    result: any\r\n}\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: theme.palette.common.black,\r\n            color: theme.palette.common.white,\r\n            fontSize:20\r\n        },\r\n        body: {\r\n            fontSize: 15,\r\n\r\n        },\r\n    }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        maxWidth: 700,\r\n        marginTop:20\r\n    },\r\n    row:{\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center'\r\n    },\r\n    img:{\r\n        cursor:'pointer'\r\n    }\r\n});\r\n\r\nconst List: React.FC<Props> = ({ languages, result }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"center\">言語</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">翻訳</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {languages.map(ele=>{\r\n                        return(\r\n                            <StyledTableRow key={ele.code}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                                    {ele.language}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell className={classes.row}>\r\n                                    {result[ele.code]}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        )\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n    )\r\n}\r\n\r\nexport default List","export const AcsessApi=async(languages,lang,text)=>{\r\n    const url='https://script.google.com/macros/s/AKfycbwujfdMM4o2QBkzUdVoykT1HVPonpxbfd39mg-5cxZv7Ych0uH6qkLIIg/exec?'\r\n    const params={}\r\n    for(let i=0; i<languages.length;i++){\r\n        params[`lang${i}`]=languages[i].code\r\n    }\r\n    params['text']=text\r\n    params['source']=lang\r\n    //params['crossDomain']=true\r\n    const query=new URLSearchParams(params);\r\n    const res = await fetch(url+query)\r\n    const data=await res.json()\r\n    return data\r\n}","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loadding = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(0,0,0,.8);\r\n  width:100%;\r\n  height:100%\r\n`\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position:'absolute',\r\n            top:'30%',\r\n            left:'45%',\r\n            '& > * + *': {\r\n                marginLeft: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst Load: React.FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Loadding>\r\n            <div className={classes.root}>\r\n                <CircularProgress color=\"secondary\" size={70}/>\r\n            </div>\r\n        </Loadding>\r\n    )\r\n}\r\n\r\nexport default Load","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Search from './components/Search';\nimport List from './components/List';\nimport {AcsessApi} from './api/Api'\nimport Load from './components/Load'\n\nexport type Language = {\n  language: string,\n  code: string\n}\n\nconst ReactApp = styled.div`\n  width:100%;\n  height:100%;\n  text-align:center;\n  display:flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst App: React.FC = () => {\n  const languages: Language[] = [\n    { language: \"日本語\", code: \"ja\" },\n    { language: \"英語\", code: \"en\" },\n    { language: \"イタリア語\", code: \"it\" },\n    { language: \"フランス語\", code: \"fr\" },\n    { language: \"アイスランド語\", code: \"is\" },\n    { language: \"アラビア語\", code: \"ar\" },\n    { language: \"インドネシア語\", code: \"id\" },\n    { language: \"エストニア語\", code: \"et\" }\n  ]\n\n  const [show, setShow] = useState<boolean>(false)\n  const [lang,setLang]=useState<string>('')\n  const [result,setResult]=useState()\n  const [load,setLoad]=useState(false)\n\n  const Translation = async(text: string) => {\n    setLoad(true)\n    const result=await AcsessApi(Filter(),lang,text)\n    setResult(result)\n    setShow(true)\n    setLoad(false)\n  }\n\n  const Filter=()=>{\n    return languages.filter(ele=>ele.code!==lang)\n  }\n\n  return (\n    <ReactApp>\n      <Search languages={languages} Translation={Translation} setLang={setLang}/>\n      {show ? <List languages={Filter()} result={result}/> : ''}\n      {load ? <Load/> : ''}\n    </ReactApp>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}